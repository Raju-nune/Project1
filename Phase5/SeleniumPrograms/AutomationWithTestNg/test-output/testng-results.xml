<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-10-03T23:53:29 IST" name="Default suite" finished-at="2022-10-03T23:54:56 IST" duration-ms="86921">
    <groups>
    </groups>
    <test started-at="2022-10-03T23:53:29 IST" name="Default test" finished-at="2022-10-03T23:54:56 IST" duration-ms="86921">
      <class name="com.test.NewTest">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.test.NewTest@38c6f217]" started-at="2022-10-03T23:53:29 IST" name="beforeMethod" finished-at="2022-10-03T23:53:34 IST" duration-ms="5559" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addtocart()[pri:0, instance:com.test.NewTest@38c6f217]" started-at="2022-10-03T23:53:34 IST" name="addtocart" finished-at="2022-10-03T23:53:43 IST" duration-ms="8179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addtocart -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.test.NewTest@38c6f217]" started-at="2022-10-03T23:53:43 IST" name="afterMethod" finished-at="2022-10-03T23:53:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.test.NewTest@38c6f217]" started-at="2022-10-03T23:53:43 IST" name="beforeMethod" finished-at="2022-10-03T23:53:46 IST" duration-ms="3300" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="login()[pri:0, instance:com.test.NewTest@38c6f217]" started-at="2022-10-03T23:53:46 IST" name="login" finished-at="2022-10-03T23:53:54 IST" duration-ms="8080" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.test.NewTest@38c6f217]" started-at="2022-10-03T23:53:54 IST" name="afterMethod" finished-at="2022-10-03T23:53:54 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.test.NewTest@38c6f217]" started-at="2022-10-03T23:53:54 IST" name="beforeMethod" finished-at="2022-10-03T23:53:58 IST" duration-ms="3736" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="register()[pri:0, instance:com.test.NewTest@38c6f217]" started-at="2022-10-03T23:53:58 IST" name="register" finished-at="2022-10-03T23:54:10 IST" duration-ms="12690" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.test.NewTest@38c6f217]" started-at="2022-10-03T23:54:10 IST" name="afterMethod" finished-at="2022-10-03T23:54:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.test.NewTest@38c6f217]" started-at="2022-10-03T23:54:10 IST" name="beforeMethod" finished-at="2022-10-03T23:54:19 IST" duration-ms="8393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="search()[pri:0, instance:com.test.NewTest@38c6f217]" started-at="2022-10-03T23:54:19 IST" name="search" finished-at="2022-10-03T23:54:56 IST" duration-ms="36791" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=106.0.5249.62)
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-DGOVPTG', ip: '192.168.0.102', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ad037608472720b0a516068a31567fa2, findElement {using=id, value=twotabsearchtextbox}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 106.0.5249.62, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\Nune Raju\AppData\...}, goog:chromeOptions: {debuggerAddress: localhost:57543}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57543/devtoo..., se:cdpVersion: 106.0.5249.62, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: ad037608472720b0a516068a31567fa2]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=106.0.5249.62)
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-DGOVPTG', ip: '192.168.0.102', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ad037608472720b0a516068a31567fa2, findElement {using=id, value=twotabsearchtextbox}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 106.0.5249.62, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\Nune Raju\AppData\...}, goog:chromeOptions: {debuggerAddress: localhost:57543}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57543/devtoo..., se:cdpVersion: 106.0.5249.62, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: ad037608472720b0a516068a31567fa2
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:66)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:365)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:357)
at com.test.NewTest.search(NewTest.java:41)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- search -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.test.NewTest@38c6f217]" started-at="2022-10-03T23:54:56 IST" name="afterMethod" finished-at="2022-10-03T23:54:56 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.test.NewTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
